ARG NODE_VERSION="jod"
ARG ALPINE_VERSION="3.21"

FROM node:${NODE_VERSION}-alpine${ALPINE_VERSION}

RUN corepack enable pnpm && corepack install -g pnpm@latest-10
RUN apk add --no-cache g++ make curl openssl git rabbitmq-server supervisor

ARG TARGETARCH
ARG DOCKER_COMPOSE_VERSION="v2.33.1"
ENV TARGETARCH=${TARGETARCH}
ENV NODE_ENV="development"

WORKDIR /app

RUN echo "Building for ${TARGETARCH}"

RUN if [ "${TARGETARCH}" = "arm64" ]; then \
  curl -L -o docker-binary "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-aarch64"; \
  elif [ "${TARGETARCH}" = "amd64" ]; then \
  curl -L -o docker-binary "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-x86_64"; \
  fi

RUN chmod +x docker-binary
RUN mv docker-binary /usr/local/bin/docker-compose

COPY ./package.json ./package.json
COPY ./pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY ./pnpm-lock.yaml ./
RUN pnpm fetch

COPY ./packages/backend/package.json ./packages/backend/package.json
COPY ./packages/frontend/package.json ./packages/frontend/package.json
COPY ./packages/frontend/scripts ./packages/frontend/scripts
COPY ./packages/frontend/public ./packages/frontend/public

RUN pnpm install --frozen-lockfile

COPY ./turbo.json ./turbo.json
COPY ./packages ./packages
COPY ./packages/backend/assets ./assets
COPY ./packages/backend/src/core/database/drizzle ./assets/migrations

COPY ./supervisord.dev.conf /etc/supervisord.conf

EXPOSE 3000

CMD ["supervisord", "-c", "/etc/supervisord.conf"]
