name: Beta Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Beta version tag (1, 2, 3, ...)"
        required: true

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      tagname: ${{ steps.get_tag.outputs.tagname }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag from package.json
        id: get_tag
        run: |
          VERSION=$(npm run version --silent)
          echo "tagname=v${VERSION}-beta.${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT

      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.get_tag.outputs.tagname }}

  build-images:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "runtipi/runtipi-cloud-builder"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        uses: docker/build-push-action@v6
        with:
          build-args: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            TIPI_VERSION=${{ needs.create-tag.outputs.tagname }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/runtipi:${{ needs.create-tag.outputs.tagname }}

  build-cli:
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - name: Dispatch an action and get the run ID
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ secrets.PAT_CLI }}
          ref: main
          repo: cli
          owner: runtipi
          workflow: build.yml
          workflow_inputs: '{ "version": "${{ needs.create-tag.outputs.tagname }}" }'

      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.12.2
        with:
          token: ${{ secrets.PAT_CLI }}
          repo: cli
          owner: runtipi
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300
          poll_interval_ms: 5000

      - name: Create bin folder
        run: mkdir -p bin

      - name: Download CLI form release on runtipi/cli repo
        run: |
          REPO="runtipi/cli"
          VERSION="${{ needs.create-tag.outputs.tagname }}"

          ASSETS_URL=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/releases/tags/$VERSION" \
            | jq -r '.assets[] | select(.name | test("runtipi-cli.+")) | .browser_download_url')

          echo "Assets URL: $ASSETS_URL"

          for url in $ASSETS_URL; do
            echo "Downloading from $url"
            curl -L -o "bin/${url##*/}" -H "Accept: application/octet-stream" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$url"
          done

      - name: Upload CLI
        uses: actions/upload-artifact@v4
        with:
          name: cli
          path: bin

  build-pi-image:
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - name: Dispatch the release action
        uses: codex-/return-dispatch@v1
        with:
          token: ${{ secrets.PAT_CLI }}
          ref: main
          repo: raspberrypi
          owner: runtipi
          workflow: beta-release.yml
          workflow_inputs: '{ "version": "${{ needs.create-tag.outputs.tagname }}" }'

  publish-release:
    runs-on: ubuntu-latest
    needs: [create-tag, build-images, build-cli]
    outputs:
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Download CLI
        uses: actions/download-artifact@v4
        with:
          name: cli
          path: cli

      - name: Create beta release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            **${{ needs.create-tag.outputs.tagname }}**
          tag_name: ${{ needs.create-tag.outputs.tagname }}
          name: ${{ needs.create-tag.outputs.tagname }}
          draft: false
          prerelease: true
          files: cli/runtipi-cli-*

  e2e-tests:
    needs: [create-tag, publish-release]
    uses: "./.github/workflows/e2e.yml"
    secrets: inherit
    with:
      version: ${{ needs.create-tag.outputs.tagname }}
