// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`DockerComposeBuilder > should add correct traefik labels to the main service 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    ports:
      - \${APP_PORT}:440
    labels:
      generated: true
      traefik.enable: true
      traefik.http.middlewares.service_test-web-redirect.redirectscheme.scheme: https
      traefik.http.services.service_test.loadbalancer.server.port: "440"
      traefik.http.routers.service_test-insecure.rule: Host(\`\${APP_DOMAIN}\`)
      traefik.http.routers.service_test-insecure.entrypoints: web
      traefik.http.routers.service_test-insecure.service: service_test
      traefik.http.routers.service_test-insecure.middlewares: service_test-web-redirect
      traefik.http.routers.service_test.rule: Host(\`\${APP_DOMAIN}\`)
      traefik.http.routers.service_test.entrypoints: websecure
      traefik.http.routers.service_test.service: service_test
      traefik.http.routers.service_test.tls.certresolver: myresolver
      traefik.http.routers.service_test-local-insecure.rule: Host(\`service-test.\${LOCAL_DOMAIN}\`)
      traefik.http.routers.service_test-local-insecure.entrypoints: web
      traefik.http.routers.service_test-local-insecure.service: service_test
      traefik.http.routers.service_test-local-insecure.middlewares: service_test-web-redirect
      traefik.http.routers.service_test-local.rule: Host(\`service-test.\${LOCAL_DOMAIN}\`)
      traefik.http.routers.service_test-local.entrypoints: websecure
      traefik.http.routers.service_test-local.service: service_test
      traefik.http.routers.service_test-local.tls: true
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should build a docker-compose file 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should correctly format a complex docker-compose file 1`] = `
"services:
  service1_test:
    image: image1
    command: node index.js
    container_name: service1_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    extra_hosts:
      - host1
      - host2
    ulimits:
      nproc: 1024
      nofile: 65536
    healthcheck:
      test: curl -f http://localhost/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      NODE_ENV: production
      PORT: 80
      SOME_VAR: value
    ports:
      - 3400:8080
    volumes:
      - /host/path:/container/path:ro
      - /host/path2:/container/path2
    depends_on:
      - service2
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 50M
          pids: 1
        reservations:
          cpus: "0.25"
          memory: 20M
          devices:
            - capabilities:
                - gpu
              driver: nvidia
              count: all
    hostname: hostname
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/sda:/dev/xvda:rwm
    entrypoint:
      - entrypoint
      - arg1
      - arg2
    pid: "1"
    privileged: true
    tty: true
    user: user
    working_dir: /working/dir
    shm_size: 1G
    cap_drop:
      - SYS_ADMIN
      - NET_ADMIN
    logging:
      driver: json-file
      options:
        syslog-address: tcp://192.168.0.42:123
    read_only: true
    security_opt:
      - label=disable
      - label=role:ROLE
    stop_signal: SIGTERM
    stop_grace_period: 1m
    stdin_open: true
  service2_test:
    image: image2
    container_name: service2_test
    restart: unless-stopped
    networks:
      - tipi_main_network
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should correctly format deploy resources 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 50M
          pids: 1
        reservations:
          cpus: "0.25"
          memory: 20M
          devices:
            - capabilities:
                - gpu
              driver: nvidia
              count: all
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should correctly format devices 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/sda:/dev/xvda:rwm
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should correctly format entrypoint as array 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    entrypoint:
      - entrypoint
      - arg1
      - arg2
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should correctly format entrypoint as string 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    entrypoint: entrypoint
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;

exports[`DockerComposeBuilder > should correctly format logging 1`] = `
"services:
  service_test:
    image: image
    container_name: service_test
    restart: unless-stopped
    networks:
      - tipi_main_network
    logging:
      driver: json-file
      options:
        syslog-address: tcp://192.168.0.42:123
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true
"
`;
